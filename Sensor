import java.io.*;
import java.net.*;
import java.time.LocalDateTime;
import java.util.*;

public class SensorArray {
	
	// GUI should ask for BEdId and Patient ID here
	//WS Client should then be able to associate with a range of BedIDs (1>20 eg)
	
	// initialised with Green values to avoid a start up alarm sequence
	static int port = 5555;
	public static int RR = 15;
	public static int O2 = 97;
	public static double Temp = 36.2;
	public static int BP = 112 ; 
	public static int HR = 80 ;
	public static Boolean Reading = true ;
	public static String Socket ;


	public static void main(String argv[])
	{

		try{
			System.out.println("Beginning patient data transfer to EWS server..." );
			Socket socketClient= new Socket("localhost",port);
			socketClient.setKeepAlive(true);
			BufferedReader reader = new BufferedReader(new InputStreamReader(socketClient.getInputStream()));
			BufferedWriter writer= new BufferedWriter(new OutputStreamWriter(socketClient.getOutputStream()));

/* Need to assign a constant BedID and a variable PatientID ( NINO? )
 * Should only do this once before the loop, but the server
 *  should save it per thread to perform SQL queries later
 */
			DataOutputStream out = new DataOutputStream(socketClient.getOutputStream());
			while (Reading = true) {
				out.writeInt(RR);
				out.writeInt(O2);
				out.writeDouble(Temp);
				out.writeInt(BP);
				out.writeInt(HR);
				System.out.println(LocalDateTime.now() +"  Current RR value: " + RR );
				System.out.println(LocalDateTime.now() +"  Current O2 value: " + O2 );
				System.out.println(LocalDateTime.now() +"  Current Temp value: " + Temp);
				System.out.println(LocalDateTime.now() +"  Current BP value: " + BP);
				System.out.println(LocalDateTime.now() +"  Current HR value: " + HR + "\r\n");
				out.flush();
				RR = RR +1 ; // incremental test for alarm state
				Thread.sleep (5 *1000);
			}
		}
		catch(Exception e){
			System.out.println("Check EWS is running");
			e.printStackTrace();
			Reading = false;
		}
	}
}
